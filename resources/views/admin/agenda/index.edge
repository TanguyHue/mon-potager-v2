@let(title="Mon potager ðŸŒ±")
@let(dashboard=true)

@include('partials/header')
@include('admin/aside_bar')
<div class="sm:ml-64">
  <div class="md:px-10 px-2 py-10">
    @!component('components/breadcrumb', { breadcrumbs: {
    'Agenda': false
    }
    })
  </div>
  <div class="md:px-10 px-2 py-10">
    <div class="flex items-center mb-4">
      <h1 class="text-2xl font-bold mr-4">Agenda</h1>
      <div class="flex items-center border dark:bg-slate-700 rounded-md dark:text-white">
        @svg('material-symbols:today-outline', {
        width: 20,
        height: 20,
        class: 'mx-2'
        })
        <select class="px-2 dark:bg-slate-700 border-none rounded-md ">
        </select>
      </div>
    </div>
    <div class="grid grid-cols-7 grid-rows-7 gap-7 text-center">
    </div>
  </div>
  <script>
    const selected = document.querySelector('select');
    const monthsName = ['Janvier', 'FÃ©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'AoÃ»t', 'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'];
    const getMonth = (index) => index == new Date().getMonth() ? 'selected' : '';
    selected.innerHTML = monthsName.map((month, index) => `<option value="${index}" ${getMonth(index)}>${month}</option>`).join('');
    selected.addEventListener('change', (e) => {
      const month = Number(e.target.value)

      const year = new Date().getFullYear()
      const firstDayOfMonth = new Date(year, month, 1).getDay()
      const numberDaysInMonth = new Date(year, month + 1, 0).getDate()

      if (!numberDaysInMonth) {
        throw new Error('Invalid month')
      }

      let days = []
      for (let i = 1; i < 7 * 6 + 1; i++) {
        if (i === 1 && firstDayOfMonth === 0) {
          for (let j = 0; j < 6; j++) {
            days.push('')
          }
          days.push(1)
          days.push(2)
        } else {
          if (i < firstDayOfMonth) {
            days.push('')
          } else if (i > numberDaysInMonth + firstDayOfMonth - 1) {
            days.push('')
          } else {
            days.push(i - firstDayOfMonth + 1)
          }
        }
      }
      updateCalender(days)
    });

    function updateCalender(days) {
      const daysElement = document.querySelector('.grid')

      const plantationMonth = plantation.filter(plantation => plantation.moisRecolte === Number(selected.value) + 1)

      daysElement.innerHTML = `
      <div>Lundi</div>
      <div class="col-start-2 row-start-1">Mardi</div>
      <div class="col-start-3 row-start-1">Mercredi</div>
      <div class="col-start-4 row-start-1">Jeudi</div>
      <div class="col-start-5 row-start-1">Vendredi</div>
      <div class="col-start-6 row-start-1">Samedi</div>
      <div class="col-start-7 row-start-1">Dimanche</div>` + days.map((day, index) => {
        if (day !== '') {
          return `<div class="col-start-${index % 7 + 1} row-start-${Math.floor(index / 7) + 2}">
          <div class="block">
            <div>
              <button
                class="transition delay-75 text-white rounded-full w-3/4 p-2 mx-4 font-bold ${plantationMonth.some(item => item.jourRecolte === Number(day)) ? 'bg-green-400 hover:bg-green-300" onclick="showInfo(' + (Number(day)) + ')"' : 'bg-blue-500 cursor-default"'
            }>${day}</button>
            </div>
          </div>
        </div>`
        } else {
          return `<div class="col-start-${index % 7 + 1} row-start-${Math.floor(index / 7) + 2}">
          <div class="block">
            <div>
            </div>
          </div>
        </div>`
        }
      }).join('')
    }

    function showInfo(index) {
      const modal = document.createElement('div')
      const plantationMonth = plantation.filter(plantation => plantation.moisRecolte === Number(selected.value) + 1)
      const plantationOfTheDay = plantationMonth.filter(item => item.jourRecolte === index)
      modal.innerHTML = `
      <div class="fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center p-2">
        <div class="bg-white dark:bg-slate-700 p-4 rounded-md">
          <div class="flex justify-between items-center">
            <h2 class="text-xl font-bold mr-4">RÃ©colte du ${index} ${monthsName[Number(selected.value)]}</h1>
            <button onclick="this.parentElement.parentElement.parentElement.remove()" class="text-2xl font-bold hover:text-gray-200">&times;</button>
          </div>${plantationOfTheDay.map((item, index) => `
          <div class="flex items-center my-4">
            <div class="flex items-center">
              <img src="${item.icon}" alt="${item.namePlantation}" class="w-10 h-10 rounded-full">
              <div class="ml-4">
                <h2 class="font-bold">${item.namePlantation}</h2>
                <p class="text-gray-500">${item.namePlante}</p>
                <p class="text-gray-500 hover:text-gray-200 transition-colors delay-75"><a href='{{ route('admin.monpotager.index') }}/${item.idPotager}'>${item.namePotager}</a></p>
              </div>
            </div>
          </div>`).join('')}
        </div>
      </div>`
      document.body.appendChild(modal)
    }

    let plantation = []
    @each(plantation in plantations)
    plantation.push({
      jourRecolte: Number('{{ plantation.dateRecolte }}'.split('/')[0].trim()),
      moisRecolte: Number('{{ plantation.dateRecolte }}'.split('/')[1].trim()),
      icon: '{{ plantation.icon }}',
      namePlantation: '{{ plantation.namePlantation }}',
      namePlante: '{{ plantation.namePlante }}',
      namePotager: '{{ plantation.namePotager }}',
      idPotager: '{{ plantation.idPotager }}'
    })
    @end
    updateCalender('{{ days }}'.split(','))
  </script>
</div>
@include('partials/footer')